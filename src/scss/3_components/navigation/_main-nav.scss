/*
 * @file
 * Defines a main navigation component.
 */

// Main Navigation
//
// A list of links to the site's top-level pages.
//
// The max-width of the main-navigation section is set using the `$max-grid-width variable`, declared in the
// 'init/_variables.scss' partial.
//
// The background and border color of elements make use of color variables, set in the 'init/_colors.scss' partial.
//
// $main-menu-span - Determines whether the main-menu is constrained by the width of container or not. If set to any
// value but container then the menu will stretch the full width of the site by setting the background colour of
// .menu_wrapper to $menu-background.
//
// :hover - A menu item that is being hovered over.
//
// Markup: ../kss-templates/main-nav.twig
//
// Style guide: components.navigation.main-navigation

$main-menu-span: container !default;
$main-menu-border: false !default;

.region-primary-menu .menu_wrapper {
  width: 100%;

  @if $main-menu-span != 'container' {
    background-color: $menu-background;
  }

  @if $main-menu-border == true {
    @include breakpoint($tab) {
      border-top: 1px solid;
      border-bottom: 1px solid;
      border-color: $menu-borders;
    }
  }

  @media screen and (max-width: $tab) {
    margin: 0;
  }
}

#main-menu {
  max-width: $max-grid-width;
  margin: 0 auto;
  position: relative;
  background-color: $menu-background;

  .nav-main {
    height: auto;
    min-height: 44px;
  }

  .menu {
    &-main {
      display: flex;
      padding: 0;
      margin: 0;
      list-style: none;
      width: 100%;

      @media screen and (max-width: $tab) {
        display: block;
        float: none;
      }

      &_sub {
        display: none;
        list-style: none;
        position: absolute;
        z-index: 9999;
        padding: 0;
        margin: 0;
        background: $menu-background;
        overflow: visible !important;

        @media screen and (max-width: $tab) {
          position: static;
          border: 0;
        }

        ul {
          left: 100%;
          top: 0;
          margin-left: 1px;

          @media screen and (max-width: $tab) {
            margin: 0;
            border: 0;
          }
        }

        .menu-item {
          float: none;
          min-width: 150px;
          padding: 0;
          margin: 0;
          position: relative;
          width: 100%;

          &.open {
            background: $menu-sub-item-hover;

            @media screen and (max-width: $tab) {
              background: lighten($menu-background, 10%);
            }
          }

          @media screen and (max-width: $tab) {
            margin: 0;
            width: 100%;
            text-align: center;
            border-right: 0;

            background: lighten($menu-background, 10%);

            .menu-item .menu-link {
              background: lighten($menu-background, 12%);
            }
          }

          span.active {
            font-weight: bold;
            text-align: left;
            padding: .8rem 1.1rem;
          }
        }

        .menu-link,
        .active {
          @include adjust-font-size-to(14px);
          min-width: 150px;
          margin: 0;
          border-top: 1px solid $menu-separator;
          text-align: left;
          overflow: hidden;
          padding: .8rem 1.1rem;
          border-radius: 0;
          color: $white;

          @media screen and (max-width: $tab) {
            border-top: 1px solid #fff;
          }

          @media screen and (min-width: $tab) {
            display: flex;
            justify-content: space-between;
            align-items: center;
          }
        }
      }
    }

    &-item {
      @include adjust-font-size-to(14px);
      line-height: 2.4rem;
      position: relative;
      padding: 0;
      margin: 0;
      flex-grow: 1;

      @media screen and (max-width: $tab) {
        float: none;
        max-width: 100%;
      }

      &.open {
        > ul {
          display: block;
        }

        .menu-toggle-btn {
          background: $white;
          color: $menu-background;
          font-weight: bold;
        }
      }
    }

    &-link,
    .active {
      border-bottom: 5px solid transparent;
      padding: 1.1rem 0 .4rem;
      display: block;
      text-decoration: none;
      color: #fff;
      font-weight: 500;
      min-width: 44px;
      text-align: center;

      @media screen and (max-width: $tab) {
        width: 100%;
        padding: 13px 2%;
        border-radius: 0;
        border-bottom: 1px solid #fff;
        border-right: 0;
        text-align: left;
      }
    }

    &-link {
      &:hover,
      &:focus {
        background: $menu-item-hover;
      }
    }

    .menu-item .active,
    .menu-item .active + .menu-main_sub .title a {
      background: rgba(191, 191, 191, .25);
      border-bottom-color: #cad400;
    }
  }

  .ico {
    width: 1rem;
    height: 1rem;
    margin: 0 0 0 5px;
  }

  .menu-item.open .ico {
    transform: rotate(270deg);
  }

  .menu-item .menu-main_sub .ico {
    transform: none;

    @media screen and (max-width: $tab) {
      transform: rotate(90deg);
    }
  }

  .menu-item .menu-main_sub .open .ico {
    transform: rotate(180deg);

    @media screen and (max-width: $tab) {
      transform: rotate(270deg);
    }
  }

  .hamburger {

    // The hamburger should use a button element for semantics.
    // Set appearance to none and remove some default styling browsers add for buttons.
    appearance: none;
    border: 0;
    width: 5.5rem;
    height: 5.5rem;
    padding: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    // Position burger absolutely beside the search box in the header.
    // Note the header search form has some padding to make space for the button.
    // @see src/scss/3_components/form/search-form.scss.
    position: absolute;
    top: -6.7rem;
    left: .5rem;
    z-index: 1;

    // On the main search page, there is no search form in the header.
    // So we need to style and position the hamburger a little differently for that page.
    .path-search & {
      justify-content: flex-start;
      left: 0;
      top: -6rem;
      width: 100%;
      height: 6.5rem;
      padding: 1rem 1.5rem;
    }

    &:focus {
      outline: 3px solid #fff;
      outline-offset: -7px;

      .path-search & {
        outline-offset: -11px;
      }
    }

    // By default the hamburger has the hidden attribute applied.
    // If JS is enabled, the hidden attribute is removed.
    // @see src/js/main-menu-toggle.js
    // @see templates/block/block--mainnavigation.html.twig.
    &[hidden] {
      display: none;
    }

    // Don't display the hamburger on larger screens.
    @include breakpoint($tab + 1px) {
      display: none;
    }

    // Hamburger Lines are added to button using a nested span and pseudo elements.
    & > span {
      position: relative;
      flex: none;
      width: 100%;
      max-width: 3rem;
      height: .3rem;
      background: #fff;
      transition: transform .4s ease;

      /* Hamburger Lines - Top & Bottom */
      &::after,
      &::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: -.9rem;
        left: 0;
        width: 100%;
        height: .3rem;
        background: inherit;
      }

      /* Moves Line Down */
      &::after {
        top: .9rem;
      }
    }

    // Hamburger lines animate into a X close symbol when menu is opened.
    &[aria-expanded='true'] > span {
      transform: rotate(135deg);

      /* Turns Lines Into X */
      &::before,
      &::after {
        top: 0;
        transform: rotate(90deg);
      }
    }

    // Hamburger X close symbol does partial rotation on hover.
    &[aria-expanded='true']:hover > span {
      transform: rotate(225deg);
    }

    // Show or hide main nav depending on the state of the hamburger.
    // @see src/js/main-menu-toggle.js.
    &:not([hidden]) ~ .nav-main {
      display: none;
      max-height: 0;
      transition: max-height 1s ease;

      // Except on larger screens - the main nav must be shown.
      @include breakpoint($tab) {
        display: none;
        max-height: 6rem;
      }
      @include breakpoint($tab + 1px) {
        display: flex;
      }
    }

    // Show main nav when the hamburger aria-expanded attribute is true.
    &[aria-expanded='true'] ~ .nav-main {
      display: flex;
      max-height: 100%;
    }
  }
}

.menu-link_button {
  background: transparent;
  border: 0;
  box-shadow: none;
  text-shadow: none;
  font-size: 1.4rem;
}
