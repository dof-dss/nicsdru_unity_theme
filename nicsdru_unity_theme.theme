<?php

/**
 * @file
 *
 * Functions to support theming in the nicsdru_unity_theme.
 */

use Drupal\Core\Template\Attribute;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess().
 */
function nicsdru_unity_theme_preprocess(&$variables) {
  // Set a variable based on the path.matcher.
  if (!isset($variables['is_front'])) {
    try {
      $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
    }
    catch (\Exception $e) {
      $variables['is_front'] = FALSE;
    }
  }

  // Ensure the cache varies correctly.
  $variables['#cache']['contexts'][] = 'url.path.is_front';
}

/**
 * Implements hook_preprocess page_attachments_alter().
 */
function nicsdru_unity_theme_page_attachments_alter(array &$page) {
  /*
   * Tell IE to use latest rendering engine (not to use compatibility mode).
   * /*$ie_edge = [
   *  '#type' => 'html_tag',
   *  '#tag' => 'meta',
   *  '#attributes' => [
   *    'http-equiv' => 'X-UA-Compatible',
   *    'content' => 'IE=edge',
   *  ],
   * ];
   * $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];
   */

  // Remove Drupal default favicon link in <head>, if present.
  if (isset($page['#attached']['html_head_link'][0])) {
    unset($page['#attached']['html_head_link'][0]);
  }

  // Attach our drupal components library for authenticated users.
  $userCurrent = \Drupal::currentUser();

  if ($userCurrent->isAuthenticated()) {
    $page['#attached']['library'][] = 'nicsdru_unity_theme/nicsdru-authenticated-styles';
  }

  return $page;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nicsdru_unity_theme_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id = NULL) {
  $form['#attached']['library'][] = 'nicsdru_unity_theme/nicsdru-authenticated-styles';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nicsdru_unity_theme_form_user_pass_alter(&$form, FormStateInterface $form_state, $form_id = NULL) {
  $form['#attached']['library'][] = 'nicsdru_unity_theme/nicsdru-authenticated-styles';
}

/**
 * Implements hook_preprocess_html().
 */
function nicsdru_unity_theme_preprocess_html(&$variables) {
  $variables['path_info']['args'] = FALSE;
  $path = \Drupal::request()->getPathInfo();
  $path_args = explode('/', $path);
  if (count($path_args) >= 3) {
    $variables['path_info']['args'] = Html::cleanCssIdentifier(ltrim($path, '/'));
  }

  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'no-sidebars';
  }
}

/**
 * Implements hook_preprocess_form().
 */
function nicsdru_unity_theme_preprocess_form(array &$variables) {
  switch ($variables['element']['#id']) {
    case "block-exposedformnewsnews-search-api":
    case "block-exposedformpublication-search-api":
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('search-form');
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('search-form--page');
      break;
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function nicsdru_unity_theme_preprocess_views_view(&$variables) {
  $variables['attributes']['role'] = 'presentation';

  if ($variables['id'] === 'search') {
    $variables['exposed']['#attributes']['class'][] = Html::cleanCssIdentifier('search-form');
    $variables['exposed']['#attributes']['class'][] = Html::cleanCssIdentifier('search-form--site');
    // If a label for the search input is not defined in the view, set
    // default label text.
    $search_label =& $variables['exposed']['#info']['filter-search_api_fulltext']['label'];
    if (isset($search_label) && empty($search_label)) {
      $search_label = t("Search this site");
    }
    // The label should be visually hidden.
    $variables['exposed']['query']['#title_display'] = 'invisible';
  }
}

/**
 * Implements hook_preprocess_facets_item_list().
 */
function nicsdru_unity_theme_preprocess_facets_item_list(array &$variables) {
  if (!empty($variables["facet"])) {
    if (!empty($variables["facet"]->getWidget()) && $variables["facet"]->getWidget()["type"] == 'links') {
      foreach ($variables["items"] as $key => $item) {
        if (array_key_exists('class', $item["value"]["#attributes"])) {
          $variables["items"][$key]["value"]["#attributes"]["class"][] = 'facet-item--link';
        }
        else {
          $variables["items"][$key]["value"]["#attributes"]["class"] = ['facet-item--link'];
        }
      }
    }
  }
}
